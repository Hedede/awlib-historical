=================================================================
        HNDF    hrengin Native Data Format Version 001100 
=================================================================
1. Overall structure

1.1. Variables
All values are declared in following format:
	VARIABLE = type: values

Also it is possible to declare an array
	VARIABLE = type: value1 value2 value3

1.2. Data types
There are severel data types built in the parser:
int ; 32-bit integer
hex ; hexadecimal representation
int64
float ; it is callled float, but is actually double precision floating point value
string ; a character sequence, value should be encased in '' or "", but that is not necessary if it is not an array of strings
raw ; raw data, represented as an hexadecimal value
bool ; 0 or 1


2. Chunks


3. Example
// comment
:hndf_ver=1.1.0.0
[model
	[shapes
		[
			type=string:shape_sphere
			radius=float:5.0
		]
		[
			type=string:shape_sphere
			radius=float:5.0
			offset=float:0.0 0.0 2.5
		]
	]
]

// inline
[model[shapes[*type=string:shape_sphere;radius=float:5.0][*type=string:shape_sphere;radius=float:5.0]]]
// notice * thingy, it signifies a no-name. can be replaced by whitespace or ';'

4. Parser
After tokenizing, parser analyses tokens, and if 'nostore' is not set, it will store all chunks in a structure. If any of variable names were bound to an address, parser will also store it to given address. 